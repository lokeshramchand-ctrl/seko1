plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

// Get Flutter version code and name from local.properties
def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace = "com.example.seko" // Update this with your package name if necessary
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion // Remove this line if you are not using NDK

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // Specify your own unique Application ID
        applicationId = "com.example.seko" // Change this to your app's unique ID
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // Use a signing config for the release build
            signingConfig = signingConfigs.debug // Change this for production
        }
    }

    // Optional: Configure Kotlin options if using Kotlin
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

flutter {
    source = "../.." // This should point to your Flutter root directory
}
